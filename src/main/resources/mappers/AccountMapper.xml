<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zn.biz.mapper.AccountMapper">

	<resultMap id="BaseResultMap" type="com.zn.biz.entity.AccountEntity">
		<id column="id" property="id" />
		<result column="money" property="money" />
		<result column="name" property="name" />
	</resultMap>

	<sql id="table-name">account</sql>

	<sql id="all-column">id ,money ,name	</sql>

	<sql id="all-query-condition">
		<if test="id != null">
	      and id = #{id}
    </if>
		<if test="money != null">
	      and money = #{money}
    </if>
	   <if test="name != null and name != ''">
	      and name = #{name}
    </if>
	</sql>


	<!-- Selective Insert-->
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.zn.biz.entity.AccountEntity">
		insert into <include refid="table-name"/>
		<trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="id != null">
	  	        id,
  	        </if>
		<if test="money != null">
	  	        money,
  	        </if>
	   <if test="name != null and name != ''">
	  	        name
  	        </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
 		<if test="id != null">
	  	        #{id},
  	        </if>
   		<if test="money != null">
	  	        #{money},
  	        </if>
   	   <if test="name != null and name != ''">
	              #{name}
  	        </if>
  		</trim>
	</insert>

	<!-- Batch Selective -->
	<insert id="insertRecords" parameterType="java.util.List">
		insert into <include refid="table-name"/>
		<trim prefix="(" suffix=")values">
		 	<include refid="all-column"/>
		</trim>
		<foreach collection="records" item="record"  separator=",">
		  (		#{id},
			#{money},
			#{name}
		   )
		</foreach>
	</insert>

	<!-- Query limit one -->
	<select id="queryLimitOne" resultMap="BaseResultMap" parameterType="com.zn.biz.entity.AccountEntity">
		select <include refid="all-column" /> from <include refid="table-name"/>
		where 1=1   <include refid="all-query-condition"/>
        limit 1
	</select>

	<!-- Query By Cond -->
	<select id="queryByCond" resultMap="BaseResultMap" parameterType="com.zn.biz.entity.AccountEntity">
		select <include refid="all-column" /> from <include refid="table-name"/>
		where 1=1 <include refid="all-query-condition"/>
		limit #{offset}, #{pageSize}
	</select>

	<!-- count By Cond -->
	<select id="countByCond" resultType="int" parameterType="com.zn.biz.entity.AccountEntity">
		select count(1) from <include refid="table-name"/>
		where 1=1 <include refid="all-query-condition"/>
	</select>

	<!-- Query By Primary Key -->
	<select id="queryById" resultMap="BaseResultMap">
		select
		<include refid="all-column" />
		from <include refid="table-name"/> where id = #{id}
	</select>

	<!-- Query By Primary Keys-->
	<select id="queryByIds" resultMap="BaseResultMap" parameterType="java.util.List">
		select
		<include refid="all-column" />
		from <include refid="table-name"/> where id in
		<foreach collection="keys" item="key" open="(" close=")" separator=",">
			#{key}
		</foreach>
	</select>

	<!-- Update By Primary Key -->
	<update id="updateAccountById" parameterType="com.zn.biz.entity.AccountEntity">
		update <include refid="table-name" />
		<set>
		<if test="id != null">
		        id = #{id},
			</if>
					<if test="money != null">
		        money = #{money},
			</if>
				   <if test="name != null and name != ''">
	            name = #{name}
			</if>
					</set>
		<where>id = #{id}</where>
	</update>

	<!-- Delete By primary Keys -->
	<delete id="deleteAccountById">
		delete from <include refid="table-name" />
		<where>id = #{id}</where>
	</delete>

</mapper>
